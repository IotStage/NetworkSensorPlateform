
{% extends 'template.html.twig' %}

{% block body%}
<div class="row">{% include 'nav.html.twig' with {'id': 2} %}<br><br><br></div>
{% block content %}
<div class="row">
    {% include "menu.graph.html.twig"  with {'id': 4 }%}
        <div class="col-md-8 col-md-offset-2">
            {% include 'graph.panel.twig' with {'id': 1, "title":"des courbes", "nom":" tampérature (ambiante/eau)" } %}
        </div>

    <div class="col-md-8 col-md-offset-2">
        {% include 'graph.panel.twig' with {'id': 2, "title":"des courbes", "nom":" tampérature (ambiante/eau)" } %}
    </div>
    <div class="col-md-8 col-md-offset-2">
        <div id="graph3" style="width: 600px; height: 600px; margin: 0 auto"></div>
    </div>
</div>


{% endblock %}

{% block chart %}

<script>
    Highcharts.chart('graph1', {

        chart: {
           // type: 'arearange',
            zoomType: 'x'
        },
        title: {
            text: 'Comparaison des Températures'
        },
        subtitle: {
            text: 'Comparaison des courbes'
        },

        xAxis: {

            type: 'datetime'//,
            //dateTimeLabelFormats: {
            //    hour: '%a %d %b'    //ex- 01 Jan 2016

//            }
        },
        yAxis: {
            title: {
                text: 'Temperature en (°C)'
            }

        },
       /* plotOptions: {
            line: {
                dataLabels: {
                    enabled: true
                },
                enableMouseTracking: false
            }
        },*/

        tooltip: {
            crosshairs: true,
            shared: true,
            valueSuffix: '°C'
        },

        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'middle'
        },


       series: [
           {
           // type: 'area',
            name: 'Température de l\'eau',
           data: [{% for a in eau%}{{ a[1]+0.0}}{% if(loop.last == false) %},{% endif %}{% endfor %}]
            //data: [20.9, 22.2, 21.7, 23.5, 21.9, 25.2, 27.0, 26.6, 24.2, 20.3, 26.6, 24.8],
           //threshold: 25,
           //color: 'orange',
           //negativeColor: 'blue'
           },
           {
            //type: 'area',
            name: 'Température ambiante',
           data: [{% for a in ambiante%}{{ a[1]+0.0 }}{% if(loop.last == false) %},{% endif %}{% endfor %}]
            //data: [24.0, 24.9, 25.5, 26.5, 27.4, 27.5, 28.2, 28.5, 29.3, 28.3, 30.9, 29.6],
           //threshold: 20,
           //color: 'red',
           //negativeColor: 'transparent'
        }]



    });
</script>
    <script>
        $('#graph2').highcharts({
            chart: {
                zoomType: 'y'
                //zoomType: 'x'
            },
            title: {
                text: 'Chart 1'
            },
            xAxis: [{
                //categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                //    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
                type: 'datetime',
                crosshair: true
            }],
            yAxis: [
                {% for key, sensor in graph %}
                { // Primary yAxis
                    id: 'axis{{ key }}',
                    labels: {
                        format: '{value}{{ sensor.unite }}',
                        style: {
                            color: Highcharts.getOptions().colors[{{ key }}+0]
                        }
                    },
                    title: {
                        text: '{{ sensor.nom }}',
                        style: {
                            color: Highcharts.getOptions().colors[{{ key }}+0]
                        }
                    },
                    events: {
                        afterSetExtremes: syncYAxis
                    }
                }{% if(loop.last == false) %},{% endif %}
                {% endfor %}
                /*, { // Secondary yAxis
                    id: 'axis2',
                    title: {
                        text: 'Rainfall',
                        style: {
                            color: Highcharts.getOptions().colors[1]
                        }
                    },
                    labels: {
                        format: '{value} mm',
                        style: {
                            color: Highcharts.getOptions().colors[1]
                        }
                    },
                    events: {
                        afterSetExtremes: syncYAxis
                    }
                }*/
            ],
            tooltip: {
                shared: true
            },
            legend: {
                layout: 'vertical',
                align: 'left',
                x: 180,
                verticalAlign: 'top',
                y: 55,
                floating: true
            },
            series: [
                {% for key, sensor in graph %}
                {
                    name: '{{ sensor.nom }}',
                    yAxis: {{ key }}+0,
                    //data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]
                    data: [{% for a in sensor.data%}[{{date( a[0] ).timestamp}}, {{ a[1] }}],{% endfor %}]
                }
                {% if(loop.last == false) %},{% endif %}
                {% endfor %}
                /*{
                    name: 'Rainfall',
                    yAxis: 1,
                    data: [49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]

            }*/

            ]
        });
        function syncYAxis(e) {
            var thisAxis = this;
            var thisChart = e.currentTarget.chart;

            Highcharts.each(Highcharts.charts, function (chart) {
                if (chart && chart !== thisChart) {
                    var currentAxis = chart.get(thisAxis.options.id);
                    currentAxis.setExtremes(e.min, e.max);
                }
            });
        }

        function rightChartAxisChanged(e) {
            var thisAxis = this;
            console.log('Right chart axis changed: ' + thisAxis.options.id);
            console.log('min/max: ' + e.min + ',' + e.max);
            console.log('user min/max: ' + e.userMin + ',' + e.userMax);
        }

    </script>
    <script language="javascript">
        // code to create a data set that looks like data: [[5, 2], [6, 3], [8, 2]]
        var windDirection, windSpeed, windDirectionJSON, windSpeedJSON, windDataJSON;
        windDirection = "[{% for a in wind.direction%}{{ a[1] }}{% if(loop.last == false) %},{% endif %}{% endfor %}]";
        windSpeed = "[{% for a in wind.vitesse%}{{ a[1] }}{% if(loop.last == false) %},{% endif %}{% endfor %}]";
        windDirectionJSON = JSON.parse(windDirection);
        windSpeedJSON = JSON.parse(windSpeed);
        windDataJSON = [];
        for (i = 0; i < windDirectionJSON.length; i++) {
            windDataJSON.push([ windDirectionJSON[i], windSpeedJSON[i] ]);
        }
        windDataJSON.sort(function(a,b) { return a[0] - b[0]; });
        var categories = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];
        Highcharts.chart('graph3',{
            series: [{
                data: windDataJSON
            }],
            chart: {
                polar: true,
                type: 'column'
            },
            title: {
                text: 'Wind Rose'
            },
            pane: {
                size: '85%'
            },
            legend: {
                align: 'right',
                verticalAlign: 'top',
                y: 100,
                layout: 'vertical'
            },
            xAxis: {
                min: 0,
                max: 360,
                type: "",
                tickInterval: 22.5,
                tickmarkPlacement: 'on',
                labels: {
                    formatter: function () {
                        return categories[this.value / 22.5] + '°';
                    }
                }
            },
            yAxis: {
                min: 0,
                endOnTick: false,
                showLastLabel: true,
                title: {
                    text: 'Frequency (%)'
                },
                labels: {
                    formatter: function () {
                        return this.value + '%';
                    }
                },
                reversedStacks: false
            },
            tooltip: {
                valueSuffix: '%'
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    shadow: false,
                    groupPadding: 0,
                    pointPlacement: 'on'
                }
            }
        });
    </script>
{% endblock %}
{% block highchart %}
    <script type="text/javascript" src="{{ base_url() }}/public/dist/js/highcharts.js"></script>
    <script src="http://code.highcharts.com/highcharts-more.js"></script>
    <script type="text/javascript" src="{{ base_url() }}/public/dist/js/modules/exporting.js"></script>
{% endblock %}
{% endblock %}